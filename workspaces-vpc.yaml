AWSTemplateFormatVersion: '2010-09-09'
Description: "Let's build a VPC environment using AWS CloudFormation!"

Parameters:
  Project:
    Type: String
    Default: project-name
    Description: Enter the project name.

  Env:
    Type: String
    Default: stg
    AllowedValues:
     - prod
     - dev
     - stg
    Description: Enter the environment.

  VpcNetworkBlock:
    Type: String
    Default: 10.0.0.0/16
    Description: CiderBlock.

  PublicSubnetA:
    Type: String
    Default: 10.0.0.0/24
    Description: PublicSubnet AZ-a.

  PublicSubnetC:
    Type: String
    Default: 10.0.1.0/24
    Description: PublicSubnet AZ-c.

  PublicSubnetD:
    Type: String
    Default: 10.0.2.0/24
    Description: PublicSubnet AZ-d.

Outputs:
  VpcId:
    Description: The VPC's ID.
    Value: !Ref myVPC
    Export:
      Name: !Join [ "-", [ !Ref Project, !Ref Env, VPCID ] ]

  VpcCiderBlock:
    Description: This is the segmentation of the NW.
    Value: !GetAtt myVPC.CidrBlock
    Export:
      Name: !Join [ "-", [ !Ref Project, !Ref Env, CiderBlock ] ]

  Igw:
    Description: The IGW's ID
    Value: !Ref myInternetGateway
    Export:
      Name: !Join [ "-", [ !Ref Project, !Ref Env, IGWID ] ]


Resources:

 #=================================
 # VPCの作成
 #=================================
  myVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
      - Key: Name
        Value: !Join [ "-", [ !Ref Project, !Ref Env ] ]


 # Public Network Setting
 #=================================
 # インターネットゲートウェイの作成
 #=================================
  myInternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
      - Key: Name
        Value: !Join [ "-", [ !Ref Project, !Ref Env ] ]

  myAttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref myInternetGateway
      VpcId: !Ref myVPC

 #=================================
 # サブネットの作成
 #=================================
  mySubnet01a:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "ap-northeast-1a"
      CidrBlock: 10.0.0.0/24
      Tags:
      - Key: Name
        Value: !Join [ "-", [ !Ref Project, !Ref Env, '01a' ] ]
      VpcId: !Ref myVPC

  mySubnet01c:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "ap-northeast-1c"
      CidrBlock: 10.0.1.0/24
      Tags:
      - Key: Name
        Value: !Join [ "-", [ !Ref Project, !Ref Env, '01c' ] ]
      VpcId: !Ref myVPC

  mySubnet01d:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "ap-northeast-1d"
      CidrBlock: 10.0.2.0/24
      Tags:
      - Key: Name
        Value: !Join [ "-", [ !Ref Project, !Ref Env, '01d' ] ]
      VpcId: !Ref myVPC

 #=================================
 # ルートテーブルの作成
 #=================================
  myRouteTable01:
    Type: "AWS::EC2::RouteTable"
    Properties:
      Tags:
      - Key: Name
        Value: !Join [ "-", [ !Ref Project, !Ref Env, '01' ] ]
      VpcId: !Ref myVPC

  myRouteTableAssociation01a:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref myRouteTable01
      SubnetId: !Ref mySubnet01a

  myRouteTableAssociation01c:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref myRouteTable01
      SubnetId: !Ref mySubnet01c

  myRouteTableAssociation01d:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref myRouteTable01
      SubnetId: !Ref mySubnet01d

  myRoute01:
    Type: "AWS::EC2::Route"
    DependsOn: myAttachGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref myInternetGateway
      RouteTableId: !Ref myRouteTable01

